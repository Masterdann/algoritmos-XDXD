#include <bits/stdc++.h>
#define MIN -1
#define MAX 1e9+7
#define SMAX 2*(1e18)+7
#define all(a) a.begin (), a.end()
#define mk  make_pair
#define pb  push_back
#define F first
#define S second
#define tri(a)  (a*(a+1))/2
#define fixed(a, c)  fixed<<setprecision(c)<<a
#define mem(a, c) memset(a, c, sizeof a)
#define sub(a, b, c) a.substr(b, c)
#define rall(a) a.rbegin(), a.rend()
#define lower(a, c) lower_bound(a.begin (), a.end (), c);
#define upper(a, c) upper_bound(a.begin (), a.end (), c);
#define fast ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#define PI 3.14159265359
using namespace std;
#pragma GCC target ("avx2")
#pragma GCC optimization ("O3")
#pragma GCC optimization ("unroll-loops")
typedef   long long int  ll;
typedef pair <int, int> ii;
typedef vector <ll> vll;
typedef vector <int> vi;
typedef vector <ii> vii;
typedef vector <vi> vvi;
typedef priority_queue <ll, vector <ll>, greater <ll> > pq;
typedef double db;
int getint(string  s)
{
    int x=stoi(s);
    return x;
}
string getstring (int x)
{
    string lol=to_string(x);
    return lol;
}

bool ok(int x, int gg)
{
    return (x<=gg-1 and x>=0);
}
int X[4]= {1, 0, -1, 0};
int Y[4]= {0, 1, 0, -1};
/*freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);*/
int gcd(int a, int b)
{
    if (a == 0)
        return b;
    return gcd(b % a, a);
}
ll lcm(ll a, ll b)
{
    return (a*b)/gcd(a, b);
}
ll exponentMod(ll A, ll B, ll C)
{
    if (A == 0)
        return 0;
    if (B == 0)
        return 1;
    ll y;
    if (B % 2 == 0)
    {
        y = exponentMod(A, B / 2, C);
        y = (y * y) % C;
    }
    else
    {
        y = A % C;
        y = (y * exponentMod(A, B - 1, C) % C) % C;
    }
    return (ll)((y + C) % C);
}
bool ispal(string x)
{
    for(int i=0, j=x.size ()-1; i<x.size (); i++, j--)
    {
        if(i>j)break;
        if(x[j]!=x[i])return false;
    }
    return true;
}
//VIVA      EL       GG!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
vvi G;
int vis[100100];
int c1,c2;
bool bfs(int u){
	vis[u]=1;
	c1++;
	int v;
	queue<int>Q;
	Q.push(u);
	while(!Q.empty()){
		u=Q.front();Q.pop();
		for(int i=0;i<G[u].size();i++){
			v=G[u][i];
			if(vis[v]==-1){
				vis[v]=3-vis[u];
				if(vis[u]==1)c2++;
				else c1++;
				Q.push(v);
			}else if(vis[u]==vis[v]){
				return 0;
			}
		}
	}
	return 1;
}
int main()
{
    int n, m;
    while(cin>>n>>m)
    {
        G=vvi(n+2);
        mem(vis, -1);
        for(int i=0; i<m; i++)
        {
            int x, y;
            cin>>x>>y;
            x--;
            y--;
            G[x].pb(y);
            G[y].pb(x);
        }
       bool sw=0,aux;
		for(int i=0;i<n;i++){
			if(vis[i]==-1){
				aux=bfs(i);
				if(!aux)sw=1;
			}
			if(sw)break;
		}
        if(sw)cout<<-1<<endl;
        else {
            vi v, v1;
            for(int i=0;i<n;i++){
                if(vis[i]==1)v.pb(i+1);
                else if(vis[i]==2) v1.pb(i+1);
            }
            cout<<v.size ()<<endl;
            for(int i=0;i<v.size();i++)cout<<v[i]<<" ";
            cout<<endl;
             cout<<v1.size ()<<endl;
            for(int i=0;i<v1.size();i++)cout<<v1[i]<<" ";
            cout<<endl;
        }
    }
}


